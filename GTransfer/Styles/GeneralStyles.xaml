<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:syncfusion="http://schemas.syncfusion.com/wpf" 
                    
                    xmlns:Dynamic ="clr-namespace:GTransfer.Library">
    <Style x:Key="normalgroupSummaryCell" TargetType="syncfusion:GridGroupSummaryCell">
        <Setter Property="BorderBrush" Value="#FF7fd0de" />
        <Setter Property="Foreground" Value="#FF2A2A2A" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    <Style x:Key="groupSummaryCell" TargetType="syncfusion:GridGroupSummaryCell">
        <Setter Property="BorderBrush" Value="#FF7fd0de" />
        <Setter Property="Foreground" Value="#FF2A2A2A" />
        <Setter Property="FontWeight" Value="SemiBold" />

    </Style>
    <Style x:Key="normaltableSummaryCell" TargetType="syncfusion:GridTableSummaryCell">
        <Setter Property="BorderBrush" Value="#FF7fd0de" />
        <Setter Property="Foreground" Value="#FF2A2A2A" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    <Style x:Key="tableSummaryCell" TargetType="syncfusion:GridTableSummaryCell">
        <Setter Property="BorderBrush" Value="#FF7fd0de" />
        <Setter Property="Foreground" Value="#FF2A2A2A" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    <Style x:Key="TinyCombo" TargetType="ComboBox">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="100"/>
    </Style>

    <Style x:Key="ControlLabel" TargetType="Label">
        <Setter Property="Width" Value="120"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <Style x:Key="RedCell" TargetType="DataGridCell">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="0">
                <Setter Property="Background" Value="Red"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TransparentBackground" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Margin" Value="2"/>
    </Style>
    <Style x:Key="GradientBackground" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop  Offset="4"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Margin" Value="2"/>
    </Style>
    <!--<Style x:Key="PlainBackground" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Margin" Value="2"/>
    </Style>-->
    <Style x:Key="PlainBackground" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Margin" Value="2"/>

    </Style>
    <Style x:Key="NumericColumn" TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="ReportButtons" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsFocused"  Value="true">
                <Setter Property="Background" Value="BlanchedAlmond"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="DoNotValidateTemplate">
        <AdornedElementPlaceholder/>
    </ControlTemplate>
    <ControlTemplate x:Key="validationErrorTemplate">
        <StackPanel Orientation="Horizontal" Margin="0">
            <AdornedElementPlaceholder x:Name="ErrorAdorner" />
            <Grid Width="12" Height="12" VerticalAlignment="Center" Margin="5 0 0 0">
                <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <TextBlock Foreground="White" FontWeight="SemiBold" FontSize="20" HorizontalAlignment="Center"  VerticalAlignment="Center" Margin="0 2 0 0"
        					 TextAlignment="Center"
        					ToolTip="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=ErrorAdorner}"><Run Text="*"/></TextBlock>
            </Grid>
        </StackPanel>
    </ControlTemplate>
    <Style x:Key="DefultTextBox"  TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource DoNotValidateTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="BlanchedAlmond" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
            </Trigger>
            <DataTrigger Binding="{Binding Tmode}" Value="NEW">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Tmode}" Value="EDIT">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource DoNotValidateTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="BlanchedAlmond" />
            </Trigger>
            <DataTrigger Binding="{Binding Tmode}" Value="NEW">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Tmode}" Value="EDIT">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>
    <Style TargetType="Label">
        <Setter Property="Width" Value="120"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="StackPanel">
        <Setter Property="Margin" Value="5 5 0 0"/>
    </Style>

    <Style x:Key="RowStackPanel" TargetType="StackPanel">
        <Setter Property="Margin" Value="5 5 0 0"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>
    <Style x:Key="VGradientBackground" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="{x:Static Dynamic:VisualClass.MainThemeStartPoint}" EndPoint="{x:Static Dynamic:VisualClass.MainThemeEndPoint}"  >
                    <GradientStop  Color="{x:Static Dynamic:VisualClass.MainThemeStartColor}" />
                    <GradientStop Color="{x:Static Dynamic:VisualClass.MainThemeEndColor}" Offset="{x:Static Dynamic:VisualClass.MainThemeOffset}"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Margin" Value="2"/>
    </Style>
    <Style x:Key="SubTotals" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
    <ItemsPanelTemplate x:Key="VirtualizingPanel">
        <VirtualizingStackPanel IsVirtualizing="True" IsItemsHost="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
    </ItemsPanelTemplate>
    <Style  TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalContentAlignment" Value="Center"  />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource DoNotValidateTemplate}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Background="{TemplateBinding Background }" BorderBrush="{TemplateBinding BorderBrush }" BorderThickness="{TemplateBinding BorderThickness }"/>
                        <ScrollViewer x:Name="PART_ContentHost" Margin="2,0,0,0" VerticalAlignment="Center" />
                        <Label Margin="5,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Gray" FontFamily="{TemplateBinding FontFamily}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="BlanchedAlmond" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Tmode}" Value="NEW">
                            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tmode}" Value="EDIT">
                            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>
    <!--<Style TargetType="TextBlock">
        <Setter Property ="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0,0,10,0"/>
    </Style>-->

    <Style x:Key="VirtualizationKey" TargetType="{x:Type ComboBox}" >
        <Setter Property="ItemsPanel">
            <Setter.Value >
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DialogBoxGridStyle" TargetType="{x:Type ItemsControl }">
        <Setter Property="ItemsPanel" >
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>

                            <RowDefinition Height="25"/>
                            <RowDefinition Height="60"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="45"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="5" />
    </Style>
</ResourceDictionary>