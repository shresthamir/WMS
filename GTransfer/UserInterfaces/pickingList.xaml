<UserControl x:Class="GTransfer.UserInterfaces.pickingList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GTransfer.UserInterfaces"
                xmlns:sf="http://schemas.syncfusion.com/wpf"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"      
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:system="clr-namespace:System;assembly=mscorlib" 
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1000">
    <UserControl.Resources>
        <DataTemplate x:Key="PrintHeaderTemplate">
            <StackPanel >
                
                <TextBlock FontSize="12" HorizontalAlignment="Center" Height="30" Text="Testingdddddddddddddddd" />
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>

            <RowDefinition Height="60"/>
            <RowDefinition />
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Border Style="{StaticResource PlainBackground}">
            <Grid>
        <StackPanel Orientation="Horizontal" IsEnabled="{Binding EntryPanelEnabled,Converter={StaticResource ReverseBool}}" >
            <Label Content="Requisition Id:" Width="100"></Label>
            <TextBox Width="100" Text="{Binding ReqId,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource HideZero}}"  >
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding LoadpickingListCommand}" />
                </TextBox.InputBindings>
            </TextBox>
                    <Button Style="{StaticResource RoundCornerButton}" Content="Generate" Height="28" Width="100" Margin="15 0" Command="{Binding GeneratePickingListCommand}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button  Width="90" Height="28" Style="{StaticResource RoundCornerButton}" Command="{Binding SavePickingCommand}" CommandParameter="{Binding ElementName=Report}" Content="Save" Visibility="{Binding IsloadMode,Converter={StaticResource ReverseBoolToVisibility}}"/>
                    <Button  Width="90" Height="28" Style="{StaticResource RoundCornerButton}" Command="{Binding PrintPreviewCommand}" CommandParameter="{Binding ElementName=Report}" Content="Print" Visibility="{Binding IsloadMode,Converter={StaticResource BoolToVisibility}}"/>
                    <Button  Width="90" Height="28" Style="{StaticResource RoundCornerButton}" Command="{Binding CancelCommand}" Content="Cancel"/>
                </StackPanel>
            </Grid>
        </Border>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="250"/>
            </Grid.ColumnDefinitions>
        
        <Border  Style="{StaticResource TransparentBackground}" >
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">

                <sf:SfDataGrid x:Name="Report" 
                         AllowResizingColumns="True"
                           NavigationMode="Cell"      
                                                   
                           AutoGenerateColumns="False"
                           ItemsSource="{Binding PickingList}"  
                          ColumnSizer="Star"
                           SelectionUnit="Cell"  
                            EditTrigger="OnTap"
                           AllowGrouping="False"    
                           ShowGroupDropArea="True">

                    <sf:SfDataGrid.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="/Syncfusion.SfGrid.WPF;component/Styles/Styles.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </sf:SfDataGrid.Resources>
                    <!--<sf:SfDataGrid.PrintSettings>
                    <sf:PrintSettings  
                                                
                                                
                                               
                                                PrintPageHeaderTemplate="{StaticResource PrintHeaderTemplate}">                        
                    </sf:PrintSettings>
                </sf:SfDataGrid.PrintSettings>-->
                    <sf:SfDataGrid.Columns>
                        <!--<sf:GridTextColumn AllowEditing="False"  MappingName="Sno" Width="50" HeaderText="Sn."></sf:GridTextColumn>-->
                        <sf:GridTextColumn AllowEditing="False"  MappingName="Bcode" HeaderText="Barcode"></sf:GridTextColumn>
                        <sf:GridTextColumn AllowEditing="False" MappingName="MENUCODE" HeaderText="Item Code"></sf:GridTextColumn>
                        <sf:GridTextColumn AllowEditing="False"   MappingName="DESCA" HeaderText="Item Name"></sf:GridTextColumn>
                        <sf:GridTextColumn AllowEditing="False"  MappingName="Unit" HeaderText="Unit"/>
                        <!--<sf:GridTextColumn AllowEditing="False" MappingName="ReqQty" HeaderText="Request Qty"></sf:GridTextColumn>-->
                        <sf:GridTextColumn AllowEditing="False" MappingName="Quantity" HeaderText="Quantity"></sf:GridTextColumn>
                        <sf:GridTextColumn AllowEditing="False" MappingName="LocationCode" HeaderText="Location"></sf:GridTextColumn>
                        <sf:GridTextColumn AllowEditing="False" MappingName="MCAT" HeaderText="Category"></sf:GridTextColumn>
                        <sf:GridTextColumn AllowEditing="False" MappingName="DeviceName" HeaderText="Device"></sf:GridTextColumn>

                    </sf:SfDataGrid.Columns>

                </sf:SfDataGrid>
            </ScrollViewer>
        </Border>
            <Border Style="{StaticResource PlainBackground}" Grid.Column="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button  Width="90" Height="28" Style="{StaticResource RoundCornerButton}" Command="{Binding AssignCommand}" Content="Assign"/>
                    <DataGrid ItemsSource="{Binding CategoryVsDeviceList}" AutoGenerateColumns="False" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Catagory" Width="120" Binding="{Binding MCAT}" IsReadOnly="True"></DataGridTextColumn>
                    <DataGridTemplateColumn   Header="Device" Width="110" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Device.DeviceName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate >
                            <DataTemplate   >
                                    <ComboBox Name="c"  ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl} ,Path= DataContext.DeviceList ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Device,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DeviceName" >

                                </ComboBox>
                                <DataTemplate.Triggers>
                                    <Trigger SourceName="c" Property="Visibility" Value="Visible">
                                        <Setter TargetName="c" Property="FocusManager.FocusedElement" Value="{Binding ElementName=c}"/>
                                        <Setter TargetName="c" Property="IsDropDownOpen" Value="True"/>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                </Grid>
            </Border>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="73.611"/>
                <ColumnDefinition Width="26.389"/>
                <ColumnDefinition Width="9.491"/>
                <ColumnDefinition Width="90.509"/>
                <ColumnDefinition Width="40*"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="15*"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>

          
            <!--<Button Grid.Column="10" Content="Preview" Command="{Binding PrintPreviewCommand}" CommandParameter="{Binding ElementName=Report}"/>-->
            <!--<Button Grid.Column="11" Content="Print" Command="{Binding PrintCommand}" CommandParameter="{Binding ElementName=Report}"/>-->

        </Grid>
    </Grid>
</UserControl>
